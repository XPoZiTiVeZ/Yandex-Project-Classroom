stages:
  - coverage

variables:
  GO_VERSION: '1.24'

.coverage-template:
  stage: coverage
  image: golang:${GO_VERSION}
  allow_failure: false
  variables:
    MIN_COVERAGE: 30
    CI_DEBUG_TRACE: 'false'
    FILENAME: 'test.sh'
  script:
    - echo "üîç Running tests with coverage..."
    - COVERAGE=$(./Pipelines/cover/$FILENAME)
    - EXIT_CODE=$?
    - if [ $EXIT_CODE -ne 0 ]; then
    - echo "‚ùå Unit tests failed!"
    - exit 1
    - fi
    - echo "üìä Test coverage:\ $COVERAGE% (minimum required:\ $MIN_COVERAGE%)"
    - if [ $COVERAGE -lt $MIN_COVERAGE ]; then
    - echo "‚ùå Coverage is below $MIN_COVERAGE %"
    - exit 1
    - fi

# TODO: update target branch to main

auth-cover:
  extends: .coverage-template
  variables:
    FILENAME: 'auth.sh'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'dev'
      # changes:
      #   - Auth/**/*
      when: always

courses-cover:
  extends: .coverage-template
  variables:
    FILENAME: 'courses.sh'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'dev'
      # changes:
      #   - Courses/**/*
      when: always

lessons-cover:
  extends: .coverage-template
  variables:
    FILENAME: 'lessons.sh'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'dev'
      # changes:
      #   - Lessons/**/*
      when: always

tasks-cover:
  extends: .coverage-template
  variables:
    FILENAME: 'tasks.sh'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'dev'
      # changes:
      #   - Tasks/**/*
      when: always
