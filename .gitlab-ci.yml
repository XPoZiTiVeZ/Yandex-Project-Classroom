stages:
  - test

# Общие настройки для всех тестов
.test_config: &test_config
  stage: test
  image: golang:1.24.2
  allow_failure: false
  variables:
    CI_DEBUG_TRACE: "false"
  before_script:
    - chmod +x ./Pipelines/test/${CI_JOB_NAME}.sh
  script:
    - ./Pipelines/test/${CI_JOB_NAME}.sh
    - EXIT_CODE=$?
    - echo $CI_PIPELINE_SOURCE
    - echo $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME;
    - echo $CI_JOB_NAME;
    - if [ $EXIT_CODE -ne 0 ]; then
      echo "❌ Merge request declined ${SERVICE_NAME} tests failed)";
      exit $EXIT_CODE;
      fi
    - echo "✅ Merge request approved (${SERVICE_NAME} tests passed)";

gateway_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "dev-gateway"
      when: always

auth_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "dev-auth"
      when: always

courses_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "dev-courses"
      when: always

lessons_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "dev-lessons"
      when: always

tasks_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "dev-tasks"
      when: always