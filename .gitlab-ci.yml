stages:
  - test
  - cover
  - build

variables:
  IMAGE: "golang:1.24.2"

# –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
.test_config: &test_config
  stage: test
  image: $IMAGE
  allow_failure: false
  variables:
    CI_DEBUG_TRACE: "false"
  before_script:
    - chmod +x ./Pipelines/test/${CI_JOB_NAME}.sh
  script:
    - ./Pipelines/test/${CI_JOB_NAME}.sh
    - EXIT_CODE=$?
    - echo $CI_PIPELINE_SOURCE
    - echo $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME;
    - echo $CI_JOB_NAME;
    - if [ $EXIT_CODE -ne 0 ]; then
      echo "‚ùå Merge request declined ${SERVICE_NAME} tests failed)";
      exit $EXIT_CODE;
      fi
    - echo "‚úÖ Merge request approved (${SERVICE_NAME} tests passed)";

.cover_config: &cover_config
  stage: cover
  image: $IMAGE
  allow_failure: false
  variables:
    MIN_COVERAGE: 30
    CI_DEBUG_TRACE: "false"
  before_script:
    - chmod +x ./Pipelines/cover/${CI_JOB_NAME}.sh
  script:
    - chmod +x ${CI_JOB_NAME}.sh
    - echo "üîç Running tests with coverage..."
    - COVERAGE=$(./${CI_JOB_NAME}.sh)
    - EXIT_CODE=$?
    - if [ $EXIT_CODE -ne 0 ]; then
    - echo "‚ùå Unit tests failed!"
    - exit 1
    - fi
    - echo "üìä Test coverage:\ $COVERAGE% (minimum required:\ $MIN_COVERAGE%)"
    - if [ $COVERAGE -lt $MIN_COVERAGE ]; then
    - echo "‚ùå Coverage is below 30%"
    - exit 1
    - fi

.build_config:
  stage: build
  image: $IMAGE
  script:
    - cd $SERVICE_PATH
    - go build ./cmd

gateway_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Gateway/**/*
        - Common/Proto/**/*
      when: always

auth_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Auth/**/*
        - Common/Proto/auth.proto
      when: always

courses_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Courses/**/*
        - Common/Proto/courses.proto
      when: always

lessons_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Lessons/**/*
        - Common/Proto/lessons.proto
      when: always

tasks_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Tasks/**/*
        - Common/Proto/tasks.proto
      when: always

notifications_test:
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Notifications/**/*
      when: always

gateway_cover:
  extends: .cover_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Gateway/**/*
        - Common/Proto/**/*
      when: always

auth_cover:
  extends: .cover_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Auth/**/*
        - Common/Proto/auth.proto
      when: always

courses_cover:
  extends: .cover_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Courses/**/*
        - Common/Proto/courses.proto
      when: always

lessons_cover:
  extends: .cover_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Lessons/**/*
        - Common/Proto/lessons.proto
      when: always

tasks_cover:
  extends: .cover_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Tasks/**/*
        - Common/Proto/tasks.proto
      when: always

notifications_cover:
  extends: .cover_config
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Notifications/**/*
      when: always

gateway_build:
  extends: .build_config
  variables:
    SERVICE_PATH: 'Gateway'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Gateway/**/*
        - Common/Proto/**/*
      when: always

auth_build:
  extends: .build_config
  variables:
    SERVICE_PATH: 'Auth'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Auth/**/*
        - Common/Proto/auth.proto
      when: always

courses_build:
  extends: .build_config
  variables:
    SERVICE_PATH: 'Courses'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Courses/**/*
        - Common/Proto/courses.proto
      when: always

lessons_build:
  extends: .build_config
  variables:
    SERVICE_PATH: 'Lessons'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Lessons/**/*
        - Common/Proto/lessons.proto
      when: always

tasks_build:
  extends: .build_config
  variables:
    SERVICE_PATH: 'Tasks'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Tasks/**/*
        - Common/Proto/tasks.proto
      when: always

notifications_build:
  extends: .build_config
  variables:
    SERVICE_PATH: 'Notifications'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - Notifications/**/*
      when: always