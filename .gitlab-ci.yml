stages:
  - test

# Общие настройки для всех тестов
.test_config: &test_config
  stage: test
  image: golang:1.24.2
  allow_failure: false
  variables:
    CI_DEBUG_TRACE: "false"
  before_script:
    - chmod +x ./Pipelines/test/${CI_JOB_NAME}.sh
  script:
    - ./Pipelines/test/${CI_JOB_NAME}.sh
    - EXIT_CODE=$?
    - if [ $EXIT_CODE -ne 0 ]; then
        echo "❌ Merge request declined ((echo "${CI_JOB_NAME}" | awk -F'_' '{result=$1; for(i=2;i<NF;i++){result=result"_"$i}; print result}') tests failed)";
        exit $EXIT_CODE;
      fi
    - echo "✅ Merge request approved ((echo "${CI_JOB_NAME}" | awk -F'_' '{result=$1; for(i=2;i<NF;i++){result=result"_"$i}; print result}') tests passed)";

.test_rules: &test_rules
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "dev-(echo "${CI_JOB_NAME}" | awk -F'_' '{result=$1; for(i=2;i<NF;i++){result=result"_"$i}; print result}')"
      when: always
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "dev"
      when: always

# Задачи для каждой ветки
gateway_test:
  extends: .test_config
  <<: *test_rules

auth_test:
  extends: .test_config
  <<: *test_rules

courses_test:
  extends: .test_config
  <<: *test_rules

lessons_test:
  extends: .test_config
  <<: *test_rules

tasks_test:
  extends: .test_config
  <<: *test_rules

# notifications_test:
#   extends: .test_config
#   <<: *test_rules

# chat_test:
#   extends: .test_config
#   <<: *test_rules