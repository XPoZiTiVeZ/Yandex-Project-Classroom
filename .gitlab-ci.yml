stages:
  - test

# Общие настройки для всех тестов
.test_config: &test_config
  stage: test
  image: golang:1.24.2
  allow_failure: false
  variables:
    CI_DEBUG_TRACE: "false"
  before_script:
    - chmod +x ./Pipelines/test/${CI_JOB_NAME}.sh
  script:
    - JOB_PREFIX=$(echo "${CI_JOB_NAME}" | awk -F'_' '{print $1}');
    - echo "${JOB_PREFIX}"
    - echo "${CI_JOB_NAME}"
    - ./Pipelines/test/${CI_JOB_NAME}.sh
    - EXIT_CODE=$?
    - if [ $EXIT_CODE -ne 0 ]; then
      echo "❌ Merge request declined (${JOB_PREFIX} tests failed)";
      exit $EXIT_CODE;
      fi
    - echo "✅ Merge request approved (${JOB_PREFIX} tests passed)";

.test_template: &test_template
  extends: .test_config
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^dev-${SERVICE_NAME}$/
      when: on_success
    - when: never  # Иначе не запускать

.services: &services
  - gateway
  - auth
  - courses
  - lessons
  - tasks

# Динамически создаем задачи для каждого сервиса
${service}_test:
  extends: .test_template
  variables:
    SERVICE_NAME: "${service}"
